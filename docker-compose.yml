version: "3.7"

services:
  # Workspace Container
  workspace:
    container_name: service_his_workspace
    build:
      context: ./env/docker/workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PHP_XDEBUG_ENABLE=${PHP_XDEBUG_ENABLE}
        - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
        - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK}
        - COMPOSER_PROCESS_TIMEOUT=${COMPOSER_PROCESS_TIMEOUT}
    volumes:
      - ./:/var/www:cached
      - ~/.ssh:/home/laradock/.ssh
      - ~/.gitconfig:/home/laradock/.gitconfig
      - ~/.config/composer:/home/laradock/.config/composer
      - ~/.aws:/home/laradock/.aws
    tty: true
    networks:
      - service_his_network
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1

  # PHP-FPM
  php-fpm:
    container_name: service_his_php_fpm
    build:
      context: ./env/docker/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PHP_XDEBUG_ENABLE=${PHP_XDEBUG_ENABLE}
        - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
        - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK}
    volumes:
      - ./:/var/www:cached
    depends_on:
      - workspace
    networks:
      - service_his_network

  # NGINX
  nginx:
    container_name: service_his_nginx
    build:
      context: ./env/docker/nginx
    volumes:
      - ./:/var/www:cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    depends_on:
      - php-fpm
    environment:
      - HTTPS_METHOD=${HTTPS_METHOD}
    ports:
      - 8000:80
    networks:
      - service_his_network

  # MySQL (Pengganti PostgreSQL)
  # mysql:
  #   image: "mysql/mysql-server:8.0" # Menggunakan image MySQL versi 8.0
  #   build:
  #     context: ./env/docker/mysql # Asumsi ada Dockerfile kustom
  #   volumes:
  #     - ${DATA_PATH_HOST}mysql:/var/lib/mysql # Volume disesuaikan untuk MySQL
  #   environment:
  #     # Menggunakan variabel dari .env
  #     - MYSQL_DATABASE=${DB_DATABASE} # lis_service
  #     - MYSQL_USER=${DB_USERNAME} # root
  #     - MYSQL_PASSWORD=${DB_PASSWORD} # (kosong)
  #     - MYSQL_ROOT_PASSWORD=${DB_PASSWORD} # (kosong)
  #   ports:
  #     # Port diekspos agar bisa diakses dari host jika diperlukan
  #     - "3307:3306"
  #   networks:
  #     - service_his_network

  # Redis
  redis:
    container_name: service_his_redis
    image: "redis"
    hostname: service_his_redis
    networks:
      - service_his_network

# Volumes configuration
volumes:
  mysql: # Diubah dari postgres ke **mysql**
    driver: "local"

# Network configuration
networks:
  service_his_network:
    name: service_his_network
